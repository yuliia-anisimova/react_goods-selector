{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleSelect","good","setState","handleClear","checkSelectedGood","this","className","type","onClick","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,aAAcE,KAPpB,EAWEE,YAAc,WACZ,EAAKD,SAAS,CACZH,aAAc,MAbpB,EAiBEK,kBAAoB,SAACH,GAAD,OAAmBA,IAAS,EAAKH,MAAMC,cAjB7D,4CAmBE,WACE,IAAQA,EAAiBM,KAAKP,MAAtBC,aACAC,EAAiDK,KAAjDL,aAAcG,EAAmCE,KAAnCF,YAAaC,EAAsBC,KAAtBD,kBAEnC,OACE,uBAAME,UAAU,oBAAhB,UACoB,KAAjBP,EAEG,qBAAIO,UAAU,sCAAd,oBACMP,EADN,gBAGE,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACVE,QAASL,OAIb,oBAAIG,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGV,EAAMa,KAAI,SAAAR,GAAI,OACb,qBACE,UAAQ,OAERK,UAAWI,IACT,CAAE,+BAAgCN,EAAkBH,KAJxD,UAOE,6BACGG,EAAkBH,GAEf,wBACE,UAAQ,eACRM,KAAK,SACLD,UAAU,iBACVE,QAASL,EAJX,eAUA,wBACE,UAAQ,YACRI,KAAK,SACLD,UAAU,SACVE,QAAS,kBACPR,EAAaC,IALjB,iBAaN,oBAAI,UAAQ,YAAYK,UAAU,eAAlC,SAAkDL,MA/B7CA,iBA7CrB,GAAyBU,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9de7a379.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleSelect = (good: string) => {\n    this.setState({\n      selectedGood: good,\n    });\n  };\n\n  handleClear = () => {\n    this.setState({\n      selectedGood: '',\n    });\n  };\n\n  checkSelectedGood = (good: string) => (good === this.state.selectedGood);\n\n  render() {\n    const { selectedGood } = this.state;\n    const { handleSelect, handleClear, checkSelectedGood } = this;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood !== ''\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={handleClear}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames(\n                  { 'has-background-success-light': checkSelectedGood(good) },\n                )}\n              >\n                <td>\n                  {checkSelectedGood(good)\n                    ? (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={handleClear}\n                      >\n                        -\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => (\n                          handleSelect(good)\n                        )}\n                      >\n                        +\n                      </button>\n                    )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">{good}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}